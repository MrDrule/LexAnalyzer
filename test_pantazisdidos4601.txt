#include	T_INCLUDE, L:1
<stdio.h>	T_LIBRARY, L:1
int	T_INT, L:2
main	T_IDENTIFIER, L:2
(	T_LPAREN, L:2
)	T_RPAREN, L:2
{	T_LBRACE, L:2
int	T_INT, L:3
n	T_IDENTIFIER, L:3
,	T_COMMA, L:3
i	T_IDENTIFIER, L:3
,	T_COMMA, L:3
sum	T_IDENTIFIER, L:3
=	T_ASSIGN, L:3
0	T_DIGIT, L:3
;	T_SEMICOLON, L:3
printf	T_PRINTF, L:5
(	T_LPAREN, L:5
"	T_QMARK, L:5
Enter	T_IDENTIFIER, L:5
a	T_IDENTIFIER, L:5
positive	T_IDENTIFIER, L:5
integer	T_IDENTIFIER, L:5
:	T_COLON, L:5
"	T_QMARK, L:5
)	T_RPAREN, L:5
;	T_SEMICOLON, L:5
scanf	T_IDENTIFIER, L:6
(	T_LPAREN, L:6
"	T_QMARK, L:6
%	T_MOD, L:6
d	T_IDENTIFIER, L:6
"	T_QMARK, L:6
,	T_COMMA, L:6
&	T_AND, L:6
n	T_IDENTIFIER, L:6
)	T_RPAREN, L:6
;	T_SEMICOLON, L:6
for	T_FOR, L:8
(	T_LPAREN, L:8
i	T_IDENTIFIER, L:8
=	T_ASSIGN, L:8
1	T_DIGIT, L:8
;	T_SEMICOLON, L:8
i	T_IDENTIFIER, L:8
<=	T_LEQ, L:8
n	T_IDENTIFIER, L:8
;	T_SEMICOLON, L:8
++	T_INCREMENT, L:8
i	T_IDENTIFIER, L:8
)	T_RPAREN, L:8
{	T_LBRACE, L:8
sum	T_IDENTIFIER, L:9
+	T_PLUS, L:9
=	T_ASSIGN, L:9
i	T_IDENTIFIER, L:9
;	T_SEMICOLON, L:9
}	T_RBRACE, L:10
printf	T_PRINTF, L:12
(	T_LPAREN, L:12
"	T_QMARK, L:12
Sum	T_IDENTIFIER, L:12
=	T_ASSIGN, L:12
%	T_MOD, L:12
d	T_IDENTIFIER, L:12
"	T_QMARK, L:12
,	T_COMMA, L:12
sum	T_IDENTIFIER, L:12
)	T_RPAREN, L:12
;	T_SEMICOLON, L:12
return	T_RETURN, L:13
0	T_DIGIT, L:13
;	T_SEMICOLON, L:13
}	T_RBRACE, L:14
